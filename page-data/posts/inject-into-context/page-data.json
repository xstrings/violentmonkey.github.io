{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/inject-into-context/","result":{"data":{"site":{"siteMetadata":{"title":"Violentmonkey"}},"markdownRemark":{"id":"2d364fb2-4c95-59df-96d8-716fa20e9c9e","html":"<p>Since Violentmonkey v2.10.0, a new type of metadata named <a href=\"/api/metadata-block/#inject-into\"><code class=\"language-text\">@inject-into</code></a> is introduced. With its help, <strong>scripts can be injected into CSP restricted pages in Firefox now!</strong></p>\n<h2 id=\"contexts\" style=\"position:relative;\"><a href=\"#contexts\" aria-label=\"contexts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contexts</h2>\n<p>As we know, there are two types of context for a script to execute in:</p>\n<ul>\n<li>\n<p>context of a web page</p>\n<p>The context in which all scripts of a web page execute. We will call it \"<em>page context</em>\" later.</p>\n</li>\n<li>\n<p>context of content scripts</p>\n<p>The context in which <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">content scripts</a> execute. We will call it \"<em>content context</em>\" later.</p>\n</li>\n</ul>\n<h2 id=\"injection-modes\" style=\"position:relative;\"><a href=\"#injection-modes\" aria-label=\"injection modes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Injection Modes</h2>\n<p>In earlier versions of Violentmonkey, all scripts will be injected into the <em>page context</em>.</p>\n<p>This works well at most times in Chrome. However, Firefox works differently. All scripts will be blocked in websites with CSP rules blocking inline scripts, like <a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>. See issue <a href=\"https://github.com/violentmonkey/violentmonkey/issues/173\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#173</a>, <a href=\"https://github.com/violentmonkey/violentmonkey/issues/408\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#408</a>.</p>\n<p>By introducing <code class=\"language-text\">@inject-into</code>, userscripts can be injected in Firefox now. In pages with CSP restrictions, we can inject userscripts into the <em>content context</em>.</p>\n<h3 id=\"mode-page\" style=\"position:relative;\"><a href=\"#mode-page\" aria-label=\"mode page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mode: <code class=\"language-text\">page</code></h3>\n<p>This is the default mode, as the behavior in Violentmonkey v2.9.x.</p>\n<p><code class=\"language-text\">unsafeWindow</code> refers to <code class=\"language-text\">window</code> of the web page.</p>\n<p><strong>Example usage:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ==UserScript==</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token comment\">// @inject-into page</span>\n<span class=\"token comment\">// ==/UserScript==</span>\n\n<span class=\"token comment\">// `@inject-into` should be set to `page` since we need to access `window` of page context.</span>\n\n<span class=\"token comment\">// Accessing objects attached to `window` of page</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi, '</span> <span class=\"token operator\">+</span> unsafeWindow<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"mode-content\" style=\"position:relative;\"><a href=\"#mode-content\" aria-label=\"mode content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mode: <code class=\"language-text\">content</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ==UserScript==</span>\n<span class=\"token comment\">// @inject-into content</span>\n<span class=\"token comment\">// ==/UserScript==</span></code></pre></div>\n<p>In this mode, scripts will be injected into the <em>content context</em>.</p>\n<p>The <em>content context</em> is an isolated world, scripts in this context have no access to JavaScript objects from <em>page context</em>. But they can communicate with DOM APIs such as <code class=\"language-text\">addEventListener</code>.</p>\n<p><code class=\"language-text\">unsafeWindow</code> refers to the <code class=\"language-text\">global</code> object of <em>content context</em>.</p>\n<p><strong>Scripts requiring access to JavaScript objects in the web page will not work in this mode.</strong> For example, <code class=\"language-text\">unsafeWindow.jQuery</code> becomes inaccessible even if jQuery is introduced in the page.</p>\n<h3 id=\"mode-auto\" style=\"position:relative;\"><a href=\"#mode-auto\" aria-label=\"mode auto permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mode: <code class=\"language-text\">auto</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ==UserScript==</span>\n<span class=\"token comment\">// @inject-into auto</span>\n<span class=\"token comment\">// ==/UserScript==</span></code></pre></div>\n<p>In this mode, scripts will be injected into the <em>page context</em> if possible. If blocked by CSP, they will be injected into the <em>content context</em>. It is the script author's job to check the environments.</p>\n<p><strong>Example usage:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ==UserScript==</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token comment\">// @inject-into auto</span>\n<span class=\"token comment\">// ==/UserScript==</span>\n\n<span class=\"token comment\">// `@inject-into` can be set to `auto` if we don't need to access any JavaScript object from page context.</span>\n\n<span class=\"token comment\">// Accessing JavaScript objects shared in both contexts</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The current page link is '</span> <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Accessing DOM</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">'background: orange'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"violentmonkey-settings\" style=\"position:relative;\"><a href=\"#violentmonkey-settings\" aria-label=\"violentmonkey settings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Violentmonkey Settings</h2>\n<p>By default, a script will try to execute in the <em>page context</em>. In Firefox, this may fail in CSP restricted pages.</p>\n<p>You can change the default behavior in the settings tab of Violentmonkey. By changing the <em>default injection mode</em> to <code class=\"language-text\">auto</code>, scripts that do not depend on traditional <code class=\"language-text\">unsafeWindow</code> will work again in Firefox.</p>","fields":{"tagSlugs":["/tags/inject/"],"type":"posts"},"frontmatter":{"title":"Inject scripts into different contexts","tags":["inject"],"date":"2018-11-23T23:35:11.000Z","sidebar":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/inject-into-context/#contexts\">Contexts</a></li>\n<li>\n<p><a href=\"/posts/inject-into-context/#injection-modes\">Injection Modes</a></p>\n<ul>\n<li><a href=\"/posts/inject-into-context/#mode-page\">Mode: <code class=\"language-text\">page</code></a></li>\n<li><a href=\"/posts/inject-into-context/#mode-content\">Mode: <code class=\"language-text\">content</code></a></li>\n<li><a href=\"/posts/inject-into-context/#mode-auto\">Mode: <code class=\"language-text\">auto</code></a></li>\n</ul>\n</li>\n<li><a href=\"/posts/inject-into-context/#violentmonkey-settings\">Violentmonkey Settings</a></li>\n</ul>"}},"pageContext":{"slug":"/posts/inject-into-context/","type":"posts"}},"staticQueryHashes":["1878747374","2176765690","2344890832","3202921338","3365866253"]}